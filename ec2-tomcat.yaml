AWSTemplateFormatVersion: '2010-09-09'
Description: CloudFormation template to create an EC2 instance with Tomcat for the Login App

Parameters:
  BucketName:
    Type: String
    Description: Name of the existing S3 bucket for web application files
    Default: mintuminuteonline-bucket-20250706
  KeyName:
    Type: AWS::EC2::KeyPair::KeyName
    Description: Name of an existing EC2 KeyPair for SSH access
    Default: cfn-keypair
  InstanceType:
    Type: String
    Description: EC2 instance type
    Default: t2.micro
  ImageId:
    Type: String
    Description: AMI ID for Amazon Linux 2023 in us-east-1
    Default: ami-05ffe3c48a9991133

Resources:
  WebServerSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow HTTP and SSH access
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 8080
          ToPort: 8080
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0

  EC2InstanceRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: ec2.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: S3AccessPolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - s3:GetObject
                Resource: !Sub arn:aws:s3:::${BucketName}/*

  EC2InstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Roles:
        - !Ref EC2InstanceRole

  WebServerInstance:
    Type: AWS::EC2::Instance
    Properties:
      InstanceType: !Ref InstanceType
      ImageId: !Ref ImageId
      KeyName: !Ref KeyName
      SecurityGroups:
        - !Ref WebServerSecurityGroup
      IamInstanceProfile: !Ref EC2InstanceProfile
      UserData:
        Fn::Base64: !Sub |
          #!/bin/bash -xe
          exec > /var/log/user-data.log 2>&1
          yum update -y
          yum install -y java-11-amazon-corretto
          curl -O https://dlcdn.apache.org/tomcat/tomcat-9/v9.0.95/bin/apache-tomcat-9.0.95.tar.gz
          tar -xzf apache-tomcat-9.0.95.tar.gz -C /opt
          mv /opt/apache-tomcat-9.0.95 /opt/tomcat
          chown -R ec2-user:ec2-user /opt/tomcat
          chmod +x /opt/tomcat/bin/*.sh
          mkdir -p /opt/tomcat/webapps/loginapp/WEB-INF/classes
          aws s3 cp s3://${BucketName}/WebContent/ /opt/tomcat/webapps/loginapp/ --recursive
          cat <<EOF > /etc/systemd/system/tomcat.service
          [Unit]
          Description=Apache Tomcat Web Application Container
          After=network.target
          [Service]
          Type=forking
          Environment="JAVA_HOME=/usr/lib/jvm/java-11-amazon-corretto"
          Environment="CATALINA_PID=/opt/tomcat/temp/tomcat.pid"
          Environment="CATALINA_HOME=/opt/tomcat"
          Environment="CATALINA_BASE=/opt/tomcat"
          ExecStart=/opt/tomcat/bin/startup.sh
          ExecStop=/opt/tomcat/bin/shutdown.sh
          User=ec2-user
          Group=ec2-user
          Restart=always
          [Install]
          WantedBy=multi-user.target
          EOF
          systemctl daemon-reload
          systemctl enable tomcat
          systemctl start tomcat
          echo "Tomcat setup complete" >> /var/log/user-data.log
      Tags:
        - Key: Name
          Value: LoginAppWebServer

Outputs:
  InstancePublicIP:
    Description: Public IP of the EC2 instance
    Value: !GetAtt WebServerInstance.PublicIp
  WebsiteURL:
    Description: URL to access the login page
    Value: !Sub http://${WebServerInstance.PublicDnsName}:8080/loginapp/login.jsp